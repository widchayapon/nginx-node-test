version: '3.7'

services:
  jenkins:
    container_name: jenkins
    # build: .
    image: tar3kom/jenkins-test:v2
    restart: always
    ports:
      - "8080:8080"  # Access Jenkins at http://localhost:8080/jenkins
    command: ["--prefix=/jenkins"]
    environment:
      - JAVA_OPTS=-Djenkins.model.Jenkins.slaveAgentPort=50000
      - HOST_HOME=${HOME}
    volumes:
      - "${HOME}/jenkins_data:/var/jenkins_home"
      - /var/run/docker.sock:/var/run/docker.sock
      - "${HOME}/.kube:/root/.kube"
      - "${HOME}/.minikube:/root/.minikube"
    user: root
    networks:
      - cicd_net

  postgres:
    container_name: sonarqube_db
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonarpass
      POSTGRES_DB: sonarqube
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cicd_net

  sonarqube:
    container_name: sonarqube
    image: sonarqube:10.5.1-community
    restart: always
    depends_on:
      - postgres
    ports:
      - "9000:9000"  # Access SonarQube at http://localhost:9000
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonarpass
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - cicd_net

volumes:
  jenkins_data:
  postgres_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks:
  cicd_net:
    driver: bridge
